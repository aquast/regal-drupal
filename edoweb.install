<?php
/**
 * @file
 * Install for a basic entity - need to create the base table for our entity.
 * This table can have as many columns as you need to keep track of
 * entity-specific data that will not be added via attached fields.
 * The minimum information for the entity to work is an id and an entity name.
 */

/**
 * Implements hook_schema().
 */
function edoweb_schema() {
  $schema = array();

  // The name of the table can be any name we choose. However, namespacing the
  // table with the module name is best practice.
  $schema['edoweb_basic'] = array(
    'description' => 'The base table for our basic entity.',
      'fields' => array(
        'local_id' => array(
          'description' => 'Primary key of the basic entity.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        // If we allow multiple bundles, then the schema must handle that;
        // We'll put it in the 'bundle_type' field to avoid confusion with the
        // entity type.
        'bundle_type' => array(
          'description' => 'The bundle type',
          'type' => 'text',
          'size' => 'medium',
          'not null' => TRUE
        ),
        'created' => array(
          'description' => 'The Unix timestamp of the entity creation time.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'remote_id' => array(
          'description' => 'The remote id of the entity, can be a URI',
          'type' => 'text',
          'not null' => FALSE,
        ),
      ),
    'primary key' => array('local_id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 *
 */
function edoweb_install() {
  // Create all the fields we are adding to our entity type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_edoweb_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  // http://api.drupal.org/api/function/field_create_instance/7
  foreach (_edoweb_installed_instances() as $instance) {
    $instance['entity_type'] = 'edoweb_basic';
    field_create_instance($instance);
  }

  // Create roles and permissions
  $role_ids = array();
  foreach (_edoweb_installed_roles() as $role_desc) {
    $role = new stdClass();
    $role->name = $role_desc['name'];
    user_role_save($role);
    // Fetch from DB to get role id
    $role = user_role_load_by_name($role->name);
    user_role_grant_permissions($role->rid, _edoweb_installed_permissions());
    $role_ids[$role->rid] = $role->name;
  }

  // Create users
  foreach (_edoweb_installed_users() as $user) {
    $user['roles'] = $role_ids;
    user_save(null, $user);
  }

}

/**
 * Return a structured array defining the fields created by this content type.
 */
function _edoweb_installed_fields() {
  $t = get_t();
  return array(
    array(
      'field_name' => 'field_edoweb_title',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_title_other',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_creator',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'edoweb_ld_reference',
    ),
    array(
      'field_name' => 'field_edoweb_contributor',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'edoweb_ld_reference',
    ),
    array(
      'field_name' => 'field_edoweb_issued',
      'cardinality' => 1,
      'type'        => 'number_integer',
    ),
    array(
      'field_name' => 'field_edoweb_language',
      'cardinality' => 1,
      // TODO: Create and set entity reference type
      'default_widget' => 'options_select',
      'type'        => 'list_text',
      'settings' => array(
        'allowed_values_function' => '_edoweb_available_languages',
      ),
    ),
    array(
      'field_name' => 'field_edoweb_edition',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_publication_place',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_subject',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      // TODO: Create and set entity reference type
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_publisher',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    array(
      'field_name' => 'field_edoweb_file',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'file',
    ),
    array(
      'field_name' => 'field_edoweb_child',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'entityreference',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array('target_bundles' => null),
      ),
    ),
    array(
      'field_name' => 'field_edoweb_parent',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'type'        => 'entityreference',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array('target_bundles' => null),
      ),
    ),
  );
}

/**
 * Return a structured array defining the instances for this content type.
 */
function _edoweb_installed_instances() {
  $t = get_t();
  return array(
    /**
     * Field instances in the monograph bundle
     */
    array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_title_other',
      'label'       => $t('Titelzusatz'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_creator',
      'label'       => $t('Autor'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_contributor',
      'label'       => $t('Beteiligte Person'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_edition',
      'label'       => $t('Ausgabe'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_publication_place',
      'label'       => $t('Erscheinungsort'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_subject',
      'label'       => $t('Schlagwort'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_publisher',
      'label'       => $t('Verlag'),
      'bundle'      => 'monograph',
    ),
    array(
      'field_name'  => 'field_edoweb_file',
      'label'       => $t('Datei'),
      'bundle'      => 'monograph',
      'settings'    => array(
        'file_extensions' => 'pdf',
      ),
    ),
    /**
     * Field instances in the ejournal bundle
     */
    array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
      'bundle'      => 'ejournal',
    ),
    array(
      'field_name'  => 'field_edoweb_creator',
      'label'       => $t('Autor'),
      'bundle'      => 'ejournal',
    ),
    array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
      'bundle'      => 'ejournal',
    ),
    array(
      'field_name'  => 'field_edoweb_publication_place',
      'label'       => $t('Erscheinungsort'),
      'bundle'      => 'ejournal',
    ),
    array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
      'bundle'      => 'ejournal',
    ),
    array(
      'field_name'  => 'field_edoweb_child',
      'label'       => $t('Volume'),
      'bundle'      => 'ejournal',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array(
          'target_bundles' => array('ejournalVolume' => 'ejournalVolume'),
        ),
      ),
    ),
    /**
     * Field instances in the ejournalVolume bundle
     */
    array(
      'field_name'  => 'field_edoweb_parent',
      'label'       => $t('eJournal'),
      'bundle'      => 'ejournalVolume',
      'settings'    => array(
        'target_type' => 'edoweb_basic',
        'handler_settings' => array(
          'target_bundles' => array('ejournal' => 'ejournal'),
        ),
      ),
    ),
    array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_title_other',
      'label'       => $t('Titelzusatz'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_creator',
      'label'       => $t('Autor'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_contributor',
      'label'       => $t('Beteiligte Person'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_edition',
      'label'       => $t('Ausgabe'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_publication_place',
      'label'       => $t('Erscheinungsort'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_subject',
      'label'       => $t('Schlagwort'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_publisher',
      'label'       => $t('Verlag'),
      'bundle'      => 'ejournalVolume',
    ),
    array(
      'field_name'  => 'field_edoweb_file',
      'label'       => $t('Datei'),
      'bundle'      => 'ejournalVolume',
      'settings'    => array(
        'file_extensions' => 'pdf',
      ),
    ),
  );
}

/**
 * Return a structured array defining the permissions for this content type.
 */
function _edoweb_installed_permissions() {
  return array(
    'view any edoweb_basic entity',
    'edit any edoweb_basic entity',
    'create edoweb_basic entities',
  );
}

/**
 * Return a structured array defining the roles for this content type.
 */
function _edoweb_installed_roles() {
  return array(
    array(
      'name' => 'edoweb_backend_user',
    ),
  );
}

/**
 * Return a structured array defining the roles for this content type.
 */
function _edoweb_installed_users() {
  return array(
    array(
      'name' => 'edoweb',
      'pass' => 'edoweb2013',
      'mail' => 'edoweb@localhost.localdomain',
      'init' => 'edoweb@localhost.localdomain',
      'status' => 1,
    )
  );
}

/*
 * Implements hook_uninstall().
 *
 * At uninstall time we'll notify field.module that the entity was deleted
 * so that attached fields can be cleaned up.
 */
function edoweb_uninstall() {
  // Delete bundles
  field_attach_delete_bundle('edoweb_basic', 'monograph');
  field_attach_delete_bundle('edoweb_basic', 'ejournal');
  field_attach_delete_bundle('edoweb_basic', 'ejournalVolume');

  // Delete field instances for now.
  // Check status of http://drupal.org/node/1015846
  $instances = _edoweb_installed_instances();
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete users
  foreach (_edoweb_installed_users() as $user) {
    $account = user_load_by_name($user['name']);
    user_delete($account->uid);
  }

  // Revoke permissions and delete roles
  foreach (_edoweb_installed_roles() as $role_desc) {
    $role = user_role_load_by_name($role_desc['name']);
    user_role_revoke_permissions($role->rid, _edoweb_installed_permissions());
    user_role_delete($role->rid);
  }

}
