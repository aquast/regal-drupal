<?php
/**
 * @file
 * Install for a basic entity - need to create the base table for our entity.
 * This table can have as many columns as you need to keep track of
 * entity-specific data that will not be added via attached fields.
 * The minimum information for the entity to work is an id and an entity name.
 */

/**
 * Implements hook_schema().
 */
function edoweb_schema() {
  $schema = array();

  // The name of the table can be any name we choose. However, namespacing the
  // table with the module name is best practice.
  $schema['edoweb_basic'] = array(
    'description' => 'The base table for our basic entity.',
      'fields' => array(
        'basic_id' => array(
          'description' => 'Primary key of the basic entity.',
          'type' => 'char',
          'length' => '36',
          //'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        // If we allow multiple bundles, then the schema must handle that;
        // We'll put it in the 'bundle_type' field to avoid confusion with the
        // entity type.
        'bundle_type' => array(
          'description' => 'The bundle type',
          'type' => 'text',
          'size' => 'medium',
          'not null' => TRUE
        ),
        'created' => array(
          'description' => 'The Unix timestamp of the entity creation time.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
    'primary key' => array('basic_id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 *
 */
function edoweb_install() {
  // Create all the fields we are adding to our entity type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_edoweb_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  // http://api.drupal.org/api/function/field_create_instance/7
  foreach (_edoweb_installed_instances() as $instance) {
    $instance['entity_type'] = 'edoweb_basic';
    $instance['bundle'] = 'monograph_bundle';
    field_create_instance($instance);
  }
}

/**
 * Return a structured array defining the fields created by this content type.
 */
function _edoweb_installed_fields() {
  $t = get_t();
  return array(
    'field_edoweb_title' => array(
      'field_name' => 'field_edoweb_title',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    'field_edoweb_title_other' => array(
      'field_name' => 'field_edoweb_title_other',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    'field_edoweb_contributor' => array(
      'field_name' => 'field_edoweb_contributor',
      'cardinality' => 1,
      // TODO: Create and set entity reference type
      'type'        => 'text',
    ),
    'field_edoweb_issued' => array(
      'field_name' => 'field_edoweb_issued',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    'field_edoweb_language' => array(
      'field_name' => 'field_edoweb_language',
      'cardinality' => 1,
      // TODO: Create and set entity reference type
      'type'        => 'text',
    ),
    'field_edoweb_edition' => array(
      'field_name' => 'field_edoweb_edition',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    'field_edoweb_publication_place' => array(
      'field_name' => 'field_edoweb_publication_place',
      'cardinality' => 1,
      'type'        => 'text',
    ),
    'field_edoweb_subject' => array(
      'field_name' => 'field_edoweb_subject',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      // TODO: Create and set entity reference type
      'type'        => 'text',
    ),
    'field_edoweb_publisher' => array(
      'field_name' => 'field_edoweb_publisher',
      'cardinality' => 1,
      'type'        => 'text',
    ),
  );
}

/**
 * Return a structured array defining the instances for this content type.
 */
function _edoweb_installed_instances() {
  $t = get_t();
  return array(
    'field_edoweb_title' => array(
      'field_name'  => 'field_edoweb_title',
      'label'       => $t('Titel'),
    ),
    'field_edoweb_title_other' => array(
      'field_name'  => 'field_edoweb_title_other',
      'label'       => $t('Titelzusatz'),
    ),
    'field_edoweb_contributor' => array(
      'field_name'  => 'field_edoweb_contributor',
      'label'       => $t('Beteiligte Person'),
    ),
    'field_edoweb_issued' => array(
      'field_name'  => 'field_edoweb_issued',
      'label'       => $t('Erscheinungsjahr'),
    ),
    'field_edoweb_language' => array(
      'field_name'  => 'field_edoweb_language',
      'label'       => $t('Sprache'),
    ),
    'field_edoweb_edition' => array(
      'field_name'  => 'field_edoweb_edition',
      'label'       => $t('Ausgabe'),
    ),
    'field_edoweb_publication_place' => array(
      'field_name'  => 'field_edoweb_publication_place',
      'label'       => $t('Erscheinungsort'),
    ),
    'field_edoweb_subject' => array(
      'field_name'  => 'field_edoweb_subject',
      'label'       => $t('Schlagwort'),
    ),
    'field_edoweb_publisher' => array(
      'field_name'  => 'field_edoweb_publisher',
      'label'       => $t('Verlag'),
    ),
  );
}

/*
 * Implements hook_uninstall().
 *
 * At uninstall time we'll notify field.module that the entity was deleted
 * so that attached fields can be cleaned up.
 */
function edoweb_uninstall() {
  field_attach_delete_bundle('edoweb_basic' , 'monograph_bundle' );
  // Delete field instances for now.
  // Check status of http://drupal.org/node/1015846
  $instances = _edoweb_installed_instances();
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }
}
